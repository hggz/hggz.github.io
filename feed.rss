<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>Silverpoint</title><description>A journal written in &lt;i&gt;Swift&lt;/i&gt; by Hugo A.G</description><link>https://hggz.github.io</link><language>en</language><lastBuildDate>Wed, 8 Jan 2020 01:48:13 +0000</lastBuildDate><pubDate>Wed, 8 Jan 2020 01:48:13 +0000</pubDate><ttl>250</ttl><atom:link href="https://hggz.github.io/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://hggz.github.io/posts/second-post</guid><title>What is time?</title><description>Pretty printing dates with foundation.</description><link>https://hggz.github.io/posts/second-post</link><pubDate>Tue, 7 Jan 2020 14:10:00 +0000</pubDate><content:encoded><![CDATA[<h1>What is time?</h1><p>This wouldn't be a swift blog (or atleast a blog written in swift) without mention of some of the extensions I've come across / made use of in my travels.</p><p>I've decided that I want this to be the first post of many that introduces an extension that I've leveraged. Some of these will be trivial, some will be more complex. Whichever the case, take what you like and leave the rest.</p><p><em>Note: I'm always open for a good debate on proper stylistic conventions and use cases. I don't pretend to know everything and value learning above all. For now, feel free to <a href="mailto:hagonzalez94@gmail.com">email</a> me directly with any opinions and perhaps I'll feature you on a post.</em></p><h2>Goal</h2><p>Part of writing a blog entirely in swift is coming to terms with the fact that not everything will be provided for you. Inlcuding (as of this post) an out of the box way for the site generator to automatically display timestamps on my posts.</p><p>That being said, this simple extension provides a helper function to return a nicer looking string from any given <code class="inline">Date</code> object in the format of <code class="inline">Month, day, year</code>. The extension automatically formats the date using this format but can accept other ISO 8601 compliant formats.</p><p><em>Note: For a more complete reference, feel free check <a href="https://nsdateformatter.com">this</a> out</em></p><p>The extension makes use of the <code class="inline">DateFormatter</code> class from the <code class="inline">Foundation</code> library and assumes that the inputted date isn't <code class="inline">nil</code>. There you go, quick and simple.</p><h2>Extension</h2><pre><code><span class="keyword">import</span> Foundation

<span class="keyword">extension</span> <span class="type">Date</span> {
    <span class="keyword">func</span> prettyPrintDate(withFormat format: <span class="type">String</span> = <span class="string">"MMM dd, yyyy"</span>) -&gt; <span class="type">String</span> {
        <span class="keyword">let</span> dateFormatter = <span class="type">DateFormatter</span>()
        dateFormatter.<span class="property">dateFormat</span> = format
        <span class="keyword">return</span> dateFormatter.<span class="call">string</span>(from: <span class="keyword">self</span>)
    }
}
</code></pre>]]></content:encoded></item><item><guid isPermaLink="true">https://hggz.github.io/posts/first-post</guid><title>Cui dono lepidum novum libellum?</title><description>Silverpoint - a journal written in swift!</description><link>https://hggz.github.io/posts/first-post</link><pubDate>Sun, 5 Jan 2020 14:09:00 +0000</pubDate><content:encoded><![CDATA[<h1>Cui dono lepidum novum libellum?</h1><p>It's been a few years since I last posted anything substantive on the internet, mainly due to my development preferences. So what better way to re-acquaint myself with the web than by writing my entire blog in <b>Swift</b>?!</p><p><em>Note: This post is not intended to be an in depth technical one with benchmarked data backing the opinions expressed. This is more of an opinionated opener to a series of posts to come.</em></p><p><em>TLDR; My goal for the next coming years is to see how far I can take Swift as a general purpose first class language outside of Apple's development ecosystem.</em></p><h2>Why Swift?</h2><p>As of this post, the internet is still heavily dominated by <b>Javascript</b> and many other popular web frameworks written in anything from <b>Ruby</b> to <b>Go</b>. Even <b>Rust</b> is trying its hand at world domination.</p><p>I've decided to take the road less traveled despite there being so many other more efficient and readily available tools out there because I both love and believe in <b>Swift</b>.</p><p>Realistically speaking, I could have definitely gotten away with using any number of the more mature technologies out there. I've always found myself switching between languages depending on what needed to get done. I've always thought of <b>Python</b> as the 'getting stuff done' language to automate tasks or prototype extensive programs in a script or 2. Anything more I've always found myself utilizing something more robust such as <b>Java</b> or <b>C++</b> / <b>C#</b>.</p><p>On the other hand, Swift is versatile and the developer experience is phenominal. It's an elegant language by design. It like a programatic memoir that encompasses the values you see force fed upon us by apple's products and HIG. It can be as concise or verbose as you need it to be without feeling 'awkward'</p><p>And last but not least, Swift leverages the benefits of LLVM. Theoretically, theres nothing stopping universal portability among all the platforms <b>LLVM</b> supports</p><h2>Goal</h2><p>Swift has been primarily used for <b>iOS / MacOS</b> development but over the last few years I've seen the community grow quickly after Apple open sourced the language.</p><p>I've seen 1 guy spear head swift's development on the <b>Windows</b> platform, and have seen it become an integral part in machine learning work through its <b>TensorFlow</b> branch.</p><p>By using <b>Swift</b> for other tasks outside of apple app development, I hope to not only support its growing community but to also contribute to it directly.</p><p>Hopefully by the time this new decade is over, <b>Swift</b> will have become a first class language for anything outside of pure iOS development instead of fading into obscurity or being locked into apple's ecosystem forever. Only time and community involvement will tell whether or not the former becomes the case.</p>]]></content:encoded></item></channel></rss>